sc_identifier
<- rrel_key_sc_element:
	...
	(*
		<- sc_explanation;;
		<= nrel_sc_text_translation:	
		...
		(*
		-> rrel_example:
			[sc-знак файла, в котором хранится в определенном формате электронный образ одного из экземпляров класса синтаксически эквивалентных конструкций, все или многие из которых, входя во внешние тексты, обозначают ту же сущность, что и соответствующий им sc-элемент] 
			(*
			<- lang_ru;;
			*);;
		*);;
	*);;

atomic_sc_identifier
<- rrel_key_sc_element:
	...
	(*
		<- sc_explanation;;
        <= nrel_sc_text_translation:	
		...
		(*
		-> rrel_example:
			[атоматрный sc-идентификатор - это sc-идентификатор, не включающий в свой состав другие sc-идентификаторы]
			(* <- lang_ru;;	*);;
		*);;
   *);;

non_atomic_sc_identifier
<- rrel_key_sc_element:
	...
	(*
		<- sc_explanation;;
        <= nrel_sc_text_translation:	
		...
		(*
		-> rrel_example:
			[неатомарный sc-идентификатор - это sc-идентификатор, состоящий из других sc-идентификаторов]
			(* <- lang_ru;;	*);;
		*);;
   *);;

line_sc_identifier
<- rrel_key_sc_element:
	...
	(*
		<- sc_explanation;;
        <= nrel_sc_text_translation:	
		...
		(*
		-> rrel_example:
			[неатомарный sc-идентификатор - это sc-идентификатор, состоящий из других sc-идентификаторов]
			(* <- lang_ru;;	*);;
		*);;
   *);;
   
non_line_sc_identifier
<- rrel_key_sc_element:
	...
	(*
		<- sc_explanation;;
        <= nrel_sc_text_translation:	
		...
		(*
		-> rrel_example:
			[Помимо строковых идентификаторов, выделяются нестроковые sc-идентификаторы, которые идентифицируют объекты при помощи графических иллюстраций, символов, иероглифов, пиктограмм и др. Представляет собой изображение идентифицируемого объекта]
			(* <- lang_ru;;	*);;
		*);;
   *);;


sc_const_identifier
<- rrel_key_sc_element:
	...
	(*
		<- sc_explanation;;
        <= nrel_sc_text_translation:	
		...
		(*
		-> rrel_example:
			[Помимо строковых идентификаторов, выделяются нестроковые sc-идентификаторы, которые идентифицируют объекты при помощи графических иллюстраций, символов, иероглифов, пиктограмм и др. Представляет собой изображение идентифицируемого объекта]
			(* <- lang_ru;;	*);;
		*);;
   *);;


sc_identifier_contour
<- rrel_key_sc_element:
	...
	(*
		<- sc_explanation;;
        <= nrel_sc_text_translation:	
		...
		(*
		-> rrel_example:
			[sc-идентификатор-контур - идентификатор sc-элемента, который обозначает семантически эквивалентную sc-конструкцию для текста в скобках, записанного на некотором внешнем языке, т.е. результат трансляции текста в скобках в SC-код. ]
			(* <- lang_ru;;	*);;
		*);;
   *);;
   
sc_identifier_link
<- rrel_key_sc_element:
	...
	(*
		<- sc_explanation;;
        <= nrel_sc_text_translation:	
		...
		(*
		-> rrel_example:
			[sc-идентификатор-ссылка представляет собой идентификатор sc-элемента, который является ссылкой на файл, содержимым которого является некоторый текст в скобках, записанный на каком-либо внешнем языке. Это идентификатор sc-элемента, обозначающего файл, содержимым которого является строка символов, ограниченная квадратными скобками]
			(* <- lang_ru;;	*);;
		*);;
   *);;
   
sc_identifier_operation
<- rrel_key_sc_element:
	...
	(*
		<- sc_explanation;;
        <= nrel_sc_text_translation:	
		...
		(*
		-> rrel_example:
			[sc-идентификатор-операция - это идентификатор sc-элемента, являющегося результатом арифметической, теоретико-множественной или логической операции, записанной на алгебраическом языке в круглых скобках.]
			(* <- lang_ru;;	*);;
		*);;
   *);;

sc_identifier_set
<- rrel_key_sc_element:
	...
	(*
		<- sc_explanation;;
        <= nrel_sc_text_translation:	
		...
		(*
		-> rrel_example:
			[sc-идентификатор множества (контура), которому принадлежат элементы, перечисленные в скобках через знак точки с запятой «;», т.е. идентификаторы объектов, входящих в идентифицируемое множество. В скобках должны быть перечислены все элементы идентифицируемого множества. Если перечисляются не все элементы идентифицированного множества, то после последнего элемента ставится знак «;», а далее ставится знак «…»]
			(* <- lang_ru;;	*);;
		*);;
   *);;

sc_identifier_tuple
<- rrel_key_sc_element:
	...
	(*
		<- sc_explanation;;
        <= nrel_sc_text_translation:	
		...
		(*
		-> rrel_example:
			[sc-идентификатор-кортеж - это идентификатор ориентированного множества, которому принадлежат элементы, перечисленные в скобках через знак точки с запятой «;», т.е. идентификаторы, входящие в идентифицируемое множество. При этом всем элементам описываемого множества указывается роль, соответствующая порядку следования имени элемента в перечислении.]
			(* <- lang_ru;;	*);;
		*);;
   *);;
   
sc_var_identifier
<- rrel_key_sc_element:
	...
	(*
		<- sc_explanation;;
        <= nrel_sc_text_translation:	
		...
		(*
		-> rrel_example:
			[При идентификации переменных sc-элементов используется нижнее подчеркивание перед sc-идентификатором]
			(* <- lang_ru;;	*);;
		*);;
   *);;
   
system_identifier
<- rrel_key_sc_element:
	...
	(*
		<- sc_explanation;;
        <= nrel_sc_text_translation:	
		...
		(*
		-> rrel_example:
			"file://nl_files/explanation_for_system_identifier.html"
			(* <- lang_ru;;	*);;
		*);;
   *);;

nrel_naming_rule
<- rrel_key_sc_element:
	...
	(*
		<- sc_explanation;;
        <= nrel_sc_text_translation:	
		...
		(*
		-> rrel_example:
			[правило именования* - это бинарное отношение, связывающее некоторый sc-элемент с правилом его именования]
			(* <- lang_ru;;	*);;
		*);;
   *);;