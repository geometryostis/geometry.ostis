scs_code_2_level => nrel_main_idtf: 
		[SCs-код. Уровень 2] (*<-lang_ru;;*) ;
		[SCs-level code 2] (*<-lang_en;;*) ;

<- rrel_key_sc_element:
		..scs_code_level_2_explanation
		(*
		<- sc_explanation;;
		<= nrel_sc_text_translation:	
			..translation_scs_code_level_2_ru
			(*
			-> rrel_example:
	"file://scs_code_htmls/scs_code_2_level_text1.html"
	(*<-lang_ru;;*) ;;
			*);;

		<= nrel_sc_text_translation:	
			..translation_scs_code_level_2_en
			(*
			-> rrel_example:
	"file://scs_code_htmls/scs_code_2_level_text2.html"
	(*<-lang_en;;*) ;;
			*);;
	*);;


scs_sentence_2_level => nrel_main_idtf: 
		[sc.s-предложение уровня 2] (*<-lang_ru;;*) ;
		[sc.s-2 level sentences] (*<-lang_en;;*) ;
		
<- rrel_key_sc_element:
		..scs_sentence_level_2_explanation
		(*
		<- sc_explanation;;
		<= nrel_sc_text_translation:	
			..translation_scs_sentence_level_2_ru
			(*
			-> rrel_example:
	"file://scs_code_htmls/scs_code_2_level_text3.html"
	(*<-lang_ru;;*) ;;
			*);;

		<= nrel_sc_text_translation:	
			..translation_scs_sentence_level_2_en
			(*
			-> rrel_example:
	"file://scs_code_htmls/scs_code_2_level_text4.html"
	(*<-lang_en;;*) ;;		
			*);;
	*);

=> nrel_generalized_syntax_structure:
	[
	<" имя sc-элемента "> ::= (" <" атомарное имя sc-элемента "> || <" неатомарное имя sc-элемента "> ")
	<" неатомарное имя sc-элемента "> ::= ( <" имя sc-элемента "> <" изображение коннектора "> <" имя sc-элемента "> ) \[" суффикс "\]
	<" sc.s-предложение уровня 2 "> ::= <" имя sc-элемента "> <" изображение коннектора "> <" имя sc-элемента "> ;;
	]
	(*
		<- backus_naur_metalanguage ;;
		<-lang_ru;;
	*);

=> nrel_generalized_syntax_structure:
	[
	<" name of sc-element "> ::= (" <" atomic name of sc-element "> || <" not atomic name of sc-element "> ")
	<" not atomic name of sc-element "> ::= ( <" name of sc-element "> <" image of connector "> <" name of sc-element "> ) \["suffix"\]
	<" sc.s-2 level sentences "> ::= <" name of sc-element "> <" image of connector "> <" name of sc-element "> ;;
	]
	(*
		<- backus_naur_metalanguage ;;
		<-lang_en;;
	*);

-> rrel_example:
	[
	сторона* ∍ ( Четырехугк(ТчкА;ТчкВ;ТчкС;ТчкD) => Отр(ТчкВ;ТчкС) );;
	](*<-lang_ru;;*) ;
-> rrel_example:
	[
	side*  ∍ ( Tetragon(PntА;PntВ;PntС;PntD) => Seg(PntВ;PntС) );;
	](*<-lang_en;;*) ;
-> rrel_example:
	[
	включение* ∍ ( Треугк(ТчкВ;ТчкС;ТчкD) => Отр(ТчкВ;ТчкС) );;
	](*<-lang_ru;;*) ;
-> rrel_example:
	[
	inclusion *  ∍ Triangle(PntВ;PntС;PntD) => Seg(PntВ;PntС) );;
	](*<-lang_en;;*) ;;
	

scs_text_2_level => nrel_main_idtf: 
	[sc.s-текст уровня 2](*<-lang_ru;;*) ;
	[sc.s-text of level 2](*<-lang_en;;*) ;

<- rrel_key_sc_element:
		..scs_text_level_2_explanation
		(*
		<- sc_explanation;;
		<= nrel_sc_text_translation:	
			..translation_scs_text_level_2_ru
			(*
			-> rrel_example:
	"file://scs_code_htmls/scs_code_2_level_text5.html"
	(*<-lang_ru;;*) ;;
			*);;

		<= nrel_sc_text_translation:	
			..translation_scs_text_level_2_en
			(*
			-> rrel_example:
	"file://scs_code_htmls/scs_code_2_level_text6.html"
	(*<-lang_en;;*);;
			*);;
		*);
-> rrel_example:
	[
	сторона* ∍ ( Четырехугк(ТчкА;ТчкВ;ТчкС;ТчкD) => Отр(ТчкВ;ТчкС) );;
	сторона* ∍ ( Четырехугк(ТчкА;ТчкВ;ТчкС;ТчкD) => Отр(ТчкС;ТчкD) );;
	сторона* ∍ ( Треугк(ТчкВ;ТчкС;ТчкD) => Отр(ТчкВ;ТчкС) );;
	сторона* ∍ ( Треугк(ТчкВ;ТчкС;ТчкD) => Отр(ТчкС;ТчкD) );;
	сторона* ∍ ( Треугк(ТчкВ;ТчкС;ТчкD) => Отр(ТчкB;ТчкD) );;
	включение* ∍ ( Четырехугк(ТчкА;ТчкВ;ТчкС;ТчкD) => Отр(ТчкВ;ТчкС) );;
	включение* ∍ ( Четырехугк(ТчкА;ТчкВ;ТчкС;ТчкD) => Отр(ТчкС;ТчкD) );;
	включение* ∍ ( Треугк(ТчкВ;ТчкС;ТчкD) => Отр(ТчкВ;ТчкС) );;
	включение* ∍ (Треугк(ТчкВ;ТчкС;ТчкD) => Отр(ТчкС;ТчкD) );;
	включение* ∍ ( Треугк(ТчкВ;ТчкС;ТчкD) => Отр(ТчкB;ТчкD) );;
	четырехугольник ∍ Четырехугк(ТчкА;ТчкВ;ТчкС;ТчкD);;
	треугольник ∍ Треугк(ТчкВ;ТчкС;ТчкD);;
	декомпозиция фигуры* ∍ ( link1 => Треугк(ТчкВ;ТчкС;ТчкD) );;
	link1 ∍ Отр(ТчкВ;ТчкС);;
	link1 ∍ Отр(ТчкC;ТчкD);;
	link1 ∍ Отр(ТчкВ;ТчкD);;
	]
	(*
		<- rrel_key_sc_element:
		..scs_text_level_2_example_explanation
		(*
		<- sc_explanation;;
		<= nrel_sc_text_translation:	
			..translation_scs_text_level_2_example_ru
			(*
			-> rrel_example:
		"file://scs_code_htmls/scs_code_2_level_text7.html"
		(*<-lang_ru;;*);;
			*);;
		*);;
	*);

-> rrel_example:
	[
	side* ∍ ( Tetragon(PntА;PntВ;PntС;PntD) => Seg(PntВ;PntС) );;
	side* ∍ ( Tetragon(PntА;PntВ;PntС;PntD) => Seg(PntС;PntD) );;
	side* ∍ ( Triangle(PntВ;PntС;PntD) => Seg(PntВ;PntС) );;
	side* ∍ ( Triangle(PntВ;PntС;PntD) => Seg(PntС;PntD) );;
	side* ∍ ( Triangle(PntВ;PntС;PntD) => Seg(PntB;PntD) );;
	inclusion*  ∍ ( Tetragon(PntА;PntВ;PntС;PntD) => Seg(PntВ;PntС) );;
	inclusion*  ∍ ( Tetragon(PntА;PntВ;PntС;PntD) => Seg(PntС;PntD) );;
	inclusion*  ∍ ( Triangle(PntВ;PntС;PntD) => Seg(PntВ;PntС) );;
	inclusion* ∍ (Triangle(PntВ;PntС;PntD) => Seg(PntС;PntD) );;
	inclusion* ∍ ( Triangle(PntВ;PntС;PntD) => Seg(PntB;PntD) );;
	tetragon ∍ Tetragon(PntА;PntВ;PntС;PntD);;
	triangle ∍ Triangle(PntВ;PntС;PntD);;
	decomposition of figure* ∍ ( link1 => Triangle(PntВ;PntС;PntD) );;
	link1 ∍ Seg(PntВ;PntС);;
	link1 ∍ Seg(PntC;PntD);;
	link1 ∍ Seg(PntВ;PntD);;
	]
	(*
	<- rrel_key_sc_element:
		..scs_text_level_2_example_explanation2
		(*
		<- sc_explanation;;
		<= nrel_sc_text_translation:	
			..translation_scs_text_level_2_example_en
			(*
			-> rrel_example:
		"file://scs_code_htmls/scs_code_2_level_text8.html"
		(*<-lang_en;;*);;
			*);;
		*);;
	*);;
