scp_program-> proc_of_search_using_statements
(*
	-> rrel_params: .proc_of_search_using_statements_param
	(*
		-> rrel_1: rrel_in: _param;;
		-> rrel_2: rrel_in: _answer_of_search_using_statements;;
	*);;

	-> rrel_operators: .proc_of_search_using_statements_operator_set
	(*
		-> rrel_init:  .proc_of_search_using_statements1A
			(*
			<- searchElStr5;;

			-> rrel_1: rrel_assign: rrel_scp_var: _node1;;
			-> rrel_2: rrel_assign: rrel_common: rrel_scp_var: _arc1;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _param;;
			-> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc2;;
			-> rrel_5: rrel_fixed: rrel_scp_const: nrel_main_statements;;

			=> nrel_then: .proc_of_search_using_statements2A;;
			=> nrel_else: .proc_of_search_using_statements3A;;
			*);;

		-> .proc_of_search_using_statements2A
			(*
			<- searchSetStr3;;

			-> rrel_1: rrel_fixed: rrel_scp_var: _node1;;
			-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc1;;
			-> rrel_3: rrel_assign: rrel_scp_var: _node2;;

			-> rrel_set_3 : rrel_fixed: rrel_scp_var: _answer_of_search_using_statements;;

			=> nrel_then: .proc_of_search_using_statements_return;;
			=> nrel_else: .proc_of_search_using_statements_return;;
			*);;

		-> .proc_of_search_using_statements3A
			(*
			<- searchElStr5;;

			-> rrel_1: rrel_fixed: rrel_scp_var: _param;;
			-> rrel_2: rrel_assign: rrel_common: rrel_scp_var: _arc1;;
			-> rrel_3: rrel_assign: rrel_scp_var: _node1;;
			-> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc2;;
			-> rrel_5: rrel_fixed: rrel_scp_const: nrel_main_proof;;

			=> nrel_then: .proc_of_search_using_statements3B;;
			=> nrel_else: .proc_of_search_using_statements_return;;
			*);;

		-> .proc_of_search_using_statements3B
			(*
			<- searchElStr5;;

			-> rrel_1: rrel_assign: rrel_scp_var: _node2;;
			-> rrel_2: rrel_assign: rrel_common: rrel_scp_var: _arc1;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _node1;;
			-> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc2;;
			-> rrel_5: rrel_fixed: rrel_scp_const: nrel_decomposition_of_action;;

			=> nrel_then: .proc_of_search_using_statements3C;;
			=> nrel_else: .proc_of_search_using_statements5A;;
			*);;

		-> .proc_of_search_using_statements3C
			(*
			<- searchSetStr3;;

			-> rrel_1: rrel_fixed: rrel_scp_var: _node2;;
			-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc1;;
			-> rrel_3: rrel_assign: rrel_scp_var: _node3;;

			-> rrel_set_3: rrel_assign: rrel_scp_var: _set_of_statements;;
			
			=> nrel_then: .proc_of_search_using_statements4A;;
			=> nrel_else: .proc_of_search_using_statements_return;;
			*);;

		-> .proc_of_search_using_statements4A
			(*
			<- searchElStr3;;

			-> rrel_1: rrel_fixed: rrel_scp_var: _set_of_statements;;
			-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc1;;
			-> rrel_3: rrel_assign: rrel_scp_var: _node1;;

			=> nrel_then: .proc_of_search_using_statements4B;;
			=> nrel_else: .proc_of_search_using_statements5A;;
			*);;

		-> .proc_of_search_using_statements4B
			(*
			<- eraseEl;;

			-> rrel_1: rrel_erase: rrel_fixed: rrel_pos_const_perm: rrel_scp_var: _arc1;;

			=> nrel_goto: .proc_of_search_using_statements4C;;
			*);;

		-> .proc_of_search_using_statements4C
			(*
			<- searchElStr5;;

			-> rrel_1: rrel_fixed: rrel_scp_var: _node1;;
			-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc1;;
			-> rrel_3: rrel_assign: rrel_scp_var: _node2;;
			-> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc2;;
			-> rrel_5: rrel_fixed: rrel_scp_const: rrel_2;;

			=> nrel_then: .proc_of_search_using_statements4D;;
			=> nrel_else: .proc_of_search_using_statements4A;;
			*);;

		-> .proc_of_search_using_statements4D
			(*
			<- searchElStr3;;

			-> rrel_1: rrel_fixed: rrel_scp_const: statement;;
			-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc1;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _node2;;

			=> nrel_then: .proc_of_search_using_statements4E;;
			=> nrel_else: .proc_of_search_using_statements4A;;
			*);;

		-> .proc_of_search_using_statements4E
			(*
			<- genElStr3;;

			-> rrel_1: rrel_fixed: rrel_scp_var: _answer_of_search_using_statements;;
			-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc1;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _node2;;

			=> nrel_goto: .proc_of_search_using_statements4A;;
			*);;


		-> .proc_of_search_using_statements5A
			(*
			<- eraseEl;;

			-> rrel_1: rrel_erase: rrel_fixed: rrel_scp_var: _set_of_statements;;

			=> nrel_goto: .proc_of_search_using_statements_return;;
			*);;

		-> .proc_of_search_using_statements_return
			(*
			<- return;;
			*);;
	*);;
*);;

