scp_program -> proc_of_verification_of_ternary_tuple (* 
	-> rrel_params: ..proc_ternary_check_params (*
		-> rrel_1: rrel_in: _first;;
		-> rrel_2: rrel_in: _first_domain;;
		-> rrel_3: rrel_in: _second;;
		-> rrel_4: rrel_in: _second_domain;;
		-> rrel_5: rrel_in: _third;;
		-> rrel_6: rrel_in: _third_domain;;
		-> rrel_7: rrel_in: _cntv;;
		-> rrel_8: rrel_in: _answer;;
		*);;

	-> rrel_operators: ..proc_ternary_check_operators (*
		-> rrel_init: ..proc_operatorA1 (*
			<- searchSetStr3;;

			-> rrel_1: rrel_fixed: rrel_scp_var: _first_domain;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc;;
			-> rrel_3: rrel_assign: rrel_scp_var: _temp;;

			-> rrel_set_3: rrel_assign: rrel_scp_var: _set;;

			=> nrel_then: ..proc_operatorA2;;
			=> nrel_else: ..proc_return;;
			*);;

		-> ..proc_operatorA2 (*
			<- searchElStr3;;

			-> rrel_1: rrel_fixed: rrel_scp_var: _set;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc;;
			-> rrel_3: rrel_assign: rrel_scp_var: _node;;

			=> nrel_then: ..proc_operatorA3;;
			=> nrel_else: ..proc_return;;
			*);;

		-> ..proc_operatorA3 (*
			<- eraseEl;;

			-> rrel_1: rrel_fixed: rrel_scp_var: rrel_erase: _arc;;

			=> nrel_goto: ..proc_operatorA4;;
			*);;

		-> ..proc_operatorA4 (*
			<- searchElStr3;;

			-> rrel_1: rrel_fixed: rrel_scp_var: _node;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _first;;

			=> nrel_then: ..proc_operatorB1;;
			=> nrel_else: ..proc_operatorA2;;
			*);;

		-> ..proc_operatorB1 (*
			<- searchSetStr3;;

			-> rrel_1: rrel_fixed: rrel_scp_var: _second_domain;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc;;
			-> rrel_3: rrel_assign: rrel_scp_var: _temp;;

			-> rrel_set_3: rrel_assign: rrel_scp_var: _set;;

			=> nrel_then: ..proc_operatorB2;;
			=> nrel_else: ..proc_return;;
			*);;

		-> ..proc_operatorB2 (*
			<- searchElStr3;;

			-> rrel_1: rrel_fixed: rrel_scp_var: _set;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc;;
			-> rrel_3: rrel_assign: rrel_scp_var: _node;;

			=> nrel_then: ..proc_operatorB3;;
			=> nrel_else: ..proc_return;;
			*);;

		-> ..proc_operatorB3 (*
			<- eraseEl;;

			-> rrel_1: rrel_fixed: rrel_scp_var: rrel_erase: _arc;;

			=> nrel_goto: ..proc_operatorB4;;
			*);;

		-> ..proc_operatorB4 (*
			<- searchElStr3;;

			-> rrel_1: rrel_fixed: rrel_scp_var: _node;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _second;;

			=> nrel_then: ..proc_operatorC1;;
			=> nrel_else: ..proc_operatorB2;;
			*);;

		-> ..proc_operatorC1 (*
			<- searchSetStr3;;

			-> rrel_1: rrel_fixed: rrel_scp_var: _third_domain;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc;;
			-> rrel_3: rrel_assign: rrel_scp_var: _temp;;

			-> rrel_set_3: rrel_assign: rrel_scp_var: _set;;

			=> nrel_then: ..proc_operatorC2;;
			=> nrel_else: ..proc_return;;
			*);;

		-> ..proc_operatorC2 (*
			<- searchElStr3;;

			-> rrel_1: rrel_fixed: rrel_scp_var: _set;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc;;
			-> rrel_3: rrel_assign: rrel_scp_var: _node;;

			=> nrel_then: ..proc_operatorC3;;
			=> nrel_else: ..proc_return;;
			*);;

		-> ..proc_operatorC3 (*
			<- eraseEl;;

			-> rrel_1: rrel_fixed: rrel_scp_var: rrel_erase: _arc;;

			=> nrel_goto: ..proc_operatorC4;;
			*);;

		-> ..proc_operatorC4 (*
			<- searchElStr3;;

			-> rrel_1: rrel_fixed: rrel_scp_var: _node;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _third;;

			=> nrel_then: ..proc_operatorD1;;
			=> nrel_else: ..proc_operatorC2;;
			*);;

		-> ..proc_operatorD1 (*
			<- searchElStr3;;

			-> rrel_1: rrel_fixed: rrel_scp_var: _answer;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _cntv;;

			=> nrel_then: ..proc_operatorD2;;
			=> nrel_else: ..proc_error;;
			*);;

		-> ..proc_operatorD2 (*
			<- eraseEl;;

			-> rrel_1: rrel_fixed: rrel_scp_var: rrel_erase: _arc;;

			=> nrel_goto: ..proc_return;;
			*);;

		-> ..proc_return (*
			<- return;;
			*);;

		-> ..proc_error (*
			<- printNl;;

			-> rrel_1: rrel_fixed: rrel_scp_const: [Error];;

			=> nrel_goto: ..proc_return;;
			*);;
		*);;
	*);;
