agent_of_proof_text_translation
=> nrel_main_idtf:
	[агентная scp-программа вывода текста доказательства утверждения на естественном языке] (* <- lang_ru;; *);
	[agent scp-program of displaying the text of the proof of the statement in a natural language] (* <- lang_en;; *);
<- agent_scp_program;;

scp_program -> agent_of_proof_text_translation 
	(*
	-> rrel_params: .agent_of_proof_text_translation_params 
		(*
		-> rrel_1: rrel_in: _event;;
		-> rrel_2: rrel_in: _input_arc;;
		*);;

	-> rrel_operators: .agent_of_proof_text_translation_operator_set
		(*
		-> rrel_init: .agent_of_proof_text_translation_operator_init1
			(*
			<- searchElStr3;;

			-> rrel_1: rrel_assign: rrel_scp_var: _temp;;
			-> rrel_2: rrel_fixed: rrel_scp_var: _input_arc;;
			-> rrel_3: rrel_assign: rrel_scp_var: _quest;;
	
			=> nrel_goto: .agent_of_proof_text_translation_operator_init2;;
			*);;

		-> .agent_of_proof_text_translation_operator_init2
			(*
			<- searchElStr3;;

			-> rrel_1: rrel_fixed: rrel_scp_const: action_of_proof_text_translation;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _quest;;

			=> nrel_then: .agent_of_proof_text_translation_operator_init3;;
			=> nrel_else: .agent_of_proof_text_translation_operator_return;;
			*);;

		-> .agent_of_proof_text_translation_operator_init3
			(*
			<- searchElStr3;;

			-> rrel_1: rrel_fixed: rrel_scp_var: _quest;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc;;
			-> rrel_3: rrel_assign: rrel_scp_var: _stat;;

			=> nrel_then: .agent_of_proof_text_translation_operator_init4;;
			=> nrel_else: .agent_of_proof_text_translation_operator_return;;
			*);;

		-> .agent_of_proof_text_translation_operator_init4
			(*
			<- searchElStr3;;

			-> rrel_1: rrel_fixed: rrel_scp_const: statement;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _stat;;

			=> nrel_then: .agent_of_proof_text_translation_operator_answer1;;
			=> nrel_else: .agent_of_proof_text_translation_operator_exception1;;
			*);;
		
		-> .agent_of_proof_text_translation_operator_answer1
			(*
			<- genEl;;

			-> rrel_1: rrel_assign: rrel_const: rrel_node: rrel_scp_var: _answer;;

			=> nrel_goto: .agent_of_proof_text_translation_operator_answer2;;
			*);;

		-> .agent_of_proof_text_translation_operator_answer2
			(*
			<- searchSetStr5;;

			-> rrel_1: rrel_fixed: rrel_scp_var: _stat;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_common: _arc1;;
			-> rrel_3: rrel_assign: rrel_scp_var: _proof;;
			-> rrel_4: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc2;;
			-> rrel_5: rrel_fixed: rrel_scp_const: nrel_main_proof;;

			-> rrel_set_2: rrel_fixed: rrel_scp_var: _answer;;
			-> rrel_set_3: rrel_fixed: rrel_scp_var: _answer;;
			-> rrel_set_4: rrel_fixed: rrel_scp_var: _answer;;

			=> nrel_then: .agent_of_proof_text_translation_operator_answer3;;	
			=> nrel_else: .agent_of_proof_text_translation_operator_exception2;;
			*);;

		-> .agent_of_proof_text_translation_operator_answer3
			(*
			<- genElStr3;;

			-> rrel_1: rrel_fixed: rrel_scp_var: _answer;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _stat;;

			=> nrel_goto: .agent_of_proof_text_translation_operator_answer4;;
			*);;

		-> .agent_of_proof_text_translation_operator_answer4
			(*
			<- genElStr3;;

			-> rrel_1: rrel_fixed: rrel_scp_var: _answer;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_const: nrel_main_proof;;

			=> nrel_goto: .agent_of_proof_text_translation_operator_answer5;;
			*);;

		-> .agent_of_proof_text_translation_operator_answer5
			(*
			<- searchSetStr5;;

			-> rrel_1: rrel_assign: rrel_scp_var: _explanation;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc1;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _proof;;
			-> rrel_4: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc2;;
			-> rrel_5: rrel_fixed: rrel_scp_const: rrel_key_sc_element;;

			-> rrel_set_2: rrel_fixed: rrel_scp_var: _answer;;
			-> rrel_set_4: rrel_fixed: rrel_scp_var: _answer;;

			=> nrel_then: .agent_of_proof_text_translation_operator_answer6;;
			=> nrel_else: .agent_of_proof_text_translation_operator_exception3;;
			*);;

		-> .agent_of_proof_text_translation_operator_answer6
			(*
			<- searchElStr3;;

			-> rrel_1: rrel_fixed: rrel_scp_const: explanation;;
			-> rrel_2: rrel_assign: rrel_scp_var: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _explanation;;

			=> nrel_then: .agent_of_proof_text_translation_operator_answer7;;
			=> nrel_else: .agent_of_proof_text_translation_operator_exception3;;
			*);;

		-> .agent_of_proof_text_translation_operator_answer7
			(*
			<- genElStr3;;

			-> rrel_1: rrel_fixed: rrel_scp_var: _answer;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_const: rrel_key_sc_element;;

			=> nrel_goto: .agent_of_proof_text_translation_operator_answer8;;
			*);;			
		
		-> .agent_of_proof_text_translation_operator_answer8
			(*
			<- genElStr3;;

			-> rrel_1: rrel_fixed: rrel_scp_var: _answer;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _explanation;;

			=> nrel_goto: .agent_of_proof_text_translation_operator_answer9;;
			*);;

		-> .agent_of_proof_text_translation_operator_answer9
			(*
			<- genElStr3;;

			-> rrel_1: rrel_fixed: rrel_scp_var: _answer;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_const: rrel_key_sc_element;;

			=> nrel_goto: .agent_of_proof_text_translation_operator_answer10;;
			*);;

		-> .agent_of_proof_text_translation_operator_answer10
			(*
			<- call;;

			-> rrel_1: rrel_fixed: rrel_scp_const: proc_of_finding_translation;;
			-> rrel_2: rrel_fixed: rrel_scp_const: agent_of_proof_text_translation_operator_answer8_params
				(*
				-> rrel_1: rrel_fixed: rrel_scp_var: _explanation;;
				-> rrel_2: rrel_fixed: rrel_scp_var: _answer;;
				*);;
			-> rrel_3: rrel_assign: rrel_scp_var: _descr;;

			=> nrel_goto: .agent_of_proof_text_translation_operator_answer10_wait;;
			*);;

		-> .agent_of_proof_text_translation_operator_answer10_wait
			(*
			<- waitReturn;;

			-> rrel_1: rrel_fixed: rrel_scp_var: _descr;;

			=> nrel_goto: .agent_of_proof_text_translation_operator_answer11;;
			*);;

		-> .agent_of_proof_text_translation_operator_answer11
			(*
			<- genElStr5;;
			
			-> rrel_1: rrel_fixed: rrel_scp_var: _quest;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_common: rrel_const: _arc1;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _answer;;
			-> rrel_4: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc2;;
			-> rrel_5: rrel_fixed: rrel_scp_const: nrel_answer;;

			=>nrel_goto: .agent_of_proof_text_translation_operator_end1;;
			*);;

		-> .agent_of_proof_text_translation_operator_end1
			(*
			<- genElStr3;;

			-> rrel_1: rrel_fixed: rrel_scp_const: question_finished_successfully;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _quest;;

			=> nrel_goto: .agent_of_proof_text_translation_operator_return;; 
			*);;

		-> .agent_of_proof_text_translation_operator_exception1
			(*
			<- call;;

			-> rrel_1: rrel_fixed: rrel_scp_const: proc_of_adding_validating_message;;
			-> rrel_2: rrel_fixed: rrel_scp_const: .agent_of_proof_text_translation_operator_exception1_params
				(*
				-> rrel_1: rrel_fixed: rrel_scp_var: _quest;;
				-> rrel_2: rrel_fixed: rrel_scp_const: [Wrong parameter is given! It must be a statement. Agent execution aborted.];;
				*);;
			-> rrel_3: rrel_assign: rrel_scp_var: _descr;;

			=> nrel_goto:.agent_of_proof_text_translation_operator_exception_erase;;
			*);;

		-> .agent_of_proof_text_translation_operator_exception2
			(*
			<- call;;

			-> rrel_1: rrel_fixed: rrel_scp_const: proc_of_adding_validating_message;;
			-> rrel_2: rrel_fixed: rrel_scp_const: .agent_of_proof_text_translation_operator_exception2_params
				(*
				-> rrel_1: rrel_fixed: rrel_scp_var: _quest;;
				-> rrel_2: rrel_fixed: rrel_scp_const: [Statement has no proof.];;
				*);;
			-> rrel_3: rrel_assign: rrel_scp_var: _descr;;

			=> nrel_goto:.agent_of_proof_text_translation_operator_exception_erase;;
			*);;

		-> .agent_of_proof_text_translation_operator_exception3
			(*
			<- call;;

			-> rrel_1: rrel_fixed: rrel_scp_const: proc_of_adding_validating_message;;
			-> rrel_2: rrel_fixed: rrel_scp_const: .agent_of_proof_text_translation_operator_exception3_params
				(*
				-> rrel_1: rrel_fixed: rrel_scp_var: _quest;;
				-> rrel_2: rrel_fixed: rrel_scp_const: [Unexpected exception.];;
				*);;
			-> rrel_3: rrel_assign: rrel_scp_var: _descr;;

			=> nrel_goto:.agent_of_proof_text_translation_operator_exception_erase;;
			*);;

		-> .agent_of_proof_text_translation_operator_exception_erase
			(*
			<- eraseEl;;

			-> rrel_1: rrel_fixed: rrel_scp_var: _answer;;

			=> nrel_goto:.agent_of_proof_text_translation_operator_exception_wait;;
			*);;		

		-> .agent_of_proof_text_translation_operator_exception_wait
			(*
			<- waitReturn;;

			-> rrel_1: rrel_fixed: rrel_scp_const: _descr;;

			=> nrel_goto:.agent_of_proof_text_translation_operator_unsuccess;;
			*);;

		-> .agent_of_proof_text_translation_operator_unsuccess
			(*
			<- genElStr3;;

			-> rrel_1: rrel_fixed: rrel_scp_const: question_finished_unsuccessfully;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _quest;;

			=> nrel_goto: .agent_of_proof_text_translation_operator_return;; 
			*);;

		-> .agent_of_proof_text_translation_operator_return
			(*
			<- return;;
			*);;
		*);;
	*);;
